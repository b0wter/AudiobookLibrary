#!/usr/bin/env bash
set -e
PROJECT_NAME=fbrary
OWNER=b0wter
REMOTE=https://api.github.com

VERSIONS=(linux-x64 linux-arm64 linux-arm win7-x64 win7-x86 win10-x64 win10-x86 osx-x64) 

echo "sourcing credentials"
source credentials

VERSION=`git describe --abbrev=0 --tags`

#
# Update the version number in version.fs
#
NUMERIC_VERSION="${VERSION#?}"
sed -i "s/[[:digit:]]\+.[[:digit:]]\+.[[:digit:]]\+/$NUMERIC_VERSION/" Version.fs

#
# Create binaries. Replace this with your own script.
#
mkdir -p out
rm out/*
for ARCHITECTURE in ${VERSIONS[@]}; do
	echo "building $ARCHITECTURE"
	dotnet publish -r $ARCHITECTURE -p:PublishSingleFile=true -c Release --self-contained true
	LOCATION="bin/Release/net5.0/${ARCHITECTURE}/publish"
	cd ${LOCATION}
	rename 'y/A-Z/a-z/' Fbrary*
	zip -r "${ARCHITECTURE}" *
	cd -
	mv "${LOCATION}/${ARCHITECTURE}.zip" "out/${ARCHITECTURE}_${VERSION}.zip"
done

#
# Create Github release.
#
# Check wether a release with this tag exists.
RELEASES=$(curl --header "Authorization: token $GITHUB_ACCESS_KEY" $REMOTE/repos/$OWNER/$PROJECT_NAME/releases | jq '.[].tag_name')

if [[ $RELEASES != *"$VERSION"* ]]; then
	# Release does NOT exist -> create it!
	echo "The release does not exist, creating a new one."
	curl --request POST --header "Authorization: token $GITHUB_ACCESS_KEY" --header "Content-Type: application/json" --data "{\"tag_name\": \"$VERSION\",\"target_commitish\": \"master\"}" $REMOTE/repos/$OWNER/$PROJECT_NAME/releases | jq '.id'
else
	echo "The release exists."
	exit 1
fi

# Get the upload_url for the release.
UPLOAD_URL=$(curl --header "Authorization: token $GITHUB_ACCESS_KEY" $REMOTE/repos/$OWNER/$PROJECT_NAME/releases/tags/$VERSION | jq '.upload_url' | rev | cut -c15- | rev | cut -c2-)

# Upload the individual files
for ARCHITECTURE in ${VERSIONS[@]}; do
	echo "Uploading asset for architecture $ARCHITECTURE (version $VERSION)."
	curl --header "Authorization: token $GITHUB_ACCESS_KEY" \
	     --header "Content-Type: application/zip" \
		 --data-binary "@out/${ARCHITECTURE}_${VERSION}.zip" \
             $UPLOAD_URL?name=${ARCHITECTURE}_${VERSION}.zip
done

